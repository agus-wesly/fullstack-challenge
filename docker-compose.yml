version: '3.8'

networks:
  default:

services:
  db:
    container_name: db
    image: mysql:latest
    restart: unless-stopped
    env_file: ./.env
    environment:
      MYSQL_DATABASE: $MYSQL_DATABASE
      MYSQL_USERNAME: $MYSQL_USERNAME
      MYSQL_ROOT_PASSWORD: $MYSQL_PASSWORD
    ports:
      - $MYSQL_PORT:$MYSQL_PORT
    volumes:
      - mysql-volume:/var/lib/mysql:rw
      - ./mysql-db:/docker-entrypoint-initdb.d/
    networks:
      - default

  cache:
    container_name: cache
    image: redis:6.2-alpine
    restart: unless-stopped
    ports:
      - '$REDIS_PORT:$REDIS_PORT'
    volumes: 
      - cache:/data

  rabbitmq:
    container_name: message-broker
    restart: unless-stopped
    image: rabbitmq:3
    ports:
      - $RABBITMQ_PORT:$RABBITMQ_PORT
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  product-service:
    depends_on:
      - db
      - cache
      - rabbitmq
    container_name: product-service
    build: ./fc-product-service
    restart: unless-stopped
    ports:
      - $PRODUCT_SERVICE_PORT:$PRODUCT_SERVICE_PORT
    environment:
      - RABBITMQ_HOST=rabbitmq
      - MYSQL_HOST=db 
      - REDIS_HOST=cache

  order-service:
    depends_on:
      - db
      - cache
      - rabbitmq
      - product-service
    container_name: order-service
    build: ./fc-order-service
    restart: unless-stopped
    ports:
      - $ORDER_SERVICE_PORT:$ORDER_SERVICE_PORT
    environment:
      - RABBITMQ_HOST=rabbitmq
      - MYSQL_HOST=db 
      - REDIS_HOST=cache
      - PRODUCT_SERVICE_URL=http://product-service:${PRODUCT_SERVICE_PORT}

  gateway:
    depends_on:
      - db
      - cache
      - rabbitmq
      - product-service
      - order-service
    container_name: gateway
    build: ./fc-gateway
    restart: unless-stopped
    ports:
      - $GATEWAY_PORT:$GATEWAY_PORT
    environment:
      - RABBITMQ_HOST=rabbitmq
      - MYSQL_HOST=db 
      - REDIS_HOST=cache
      - PRODUCT_SERVICE_URL=http://product-service:${PRODUCT_SERVICE_PORT}
      - ORDER_SERVICE_URL=http://order-service:${ORDER_SERVICE_PORT}

volumes: 
  mysql-volume:
  cache:
    driver: local
  rabbitmq_data:
